@startuml
!theme plain
title 6. Quay lại Đăng nhập và Tích hợp

actor User as U
participant "LoginForm.jsx" as LF
participant "AuthContext.jsx" as AC
participant "api.js" as API
participant "AuthController" as AUTH

== Bước 4: Quay lại đăng nhập ==

U -> LF: Truy cập /:userType/login?reset=success
note right: Sau khi đặt lại mật khẩu thành công

LF -> LF: useEffect() phát hiện query reset=success
LF -> LF: setSuccess('Mật khẩu đã được đặt lại thành công. Vui lòng đăng nhập với mật khẩu mới.')
LF -> LF: setTimeout(() => setSuccess(''), 5000)
LF -> U: Hiển thị thông báo thành công trong 5 giây

== Đăng nhập với mật khẩu mới ==

U -> LF: Nhập email và mật khẩu mới
U -> LF: Chọn userType và nhấn "Đăng nhập"

LF -> AC: onSubmit() → gọi login(email, newPassword, userType)
AC -> API: Gọi API đăng nhập tương ứng

alt Đăng nhập thành công
    API -> AUTH: Xác thực với mật khẩu mới
    AUTH -> API: JWT token + user info
    API -> AC: Success response
    AC -> AC: Lưu vào localStorage:
    note right of AC
    - accessToken
    - user info
    - userRole
    end note

    AC -> AC: Cập nhật AuthContext state:
    note right of AC
    - isAuthenticated = true
    - user
    - userRole
    end note

    AC -> U: Chuyển hướng đến dashboard:
    note right
    - STUDENT → /student/dashboard
    - TEACHER → /teacher/dashboard
    - ADMIN → /admin/dashboard
    end note

else Đăng nhập thất bại
    API -> AC: Error response
    AC -> LF: Hiển thị lỗi đăng nhập
    LF -> U: "Email hoặc mật khẩu không chính xác"
end

== Tích hợp bảo mật ==

note over LF, AUTH
**Các điểm bảo mật:**
1. Mật khẩu mới được mã hóa bằng BCryptPasswordEncoder
2. OTP có thời hạn 60 giây, giảm nguy cơ lạm dụng
3. sessionStorage lưu resetEmail (xóa sau khi hoàn thành)
4. JWT token được sử dụng cho authentication
5. Kiểm tra email domain cho từng loại user
end note

@enduml