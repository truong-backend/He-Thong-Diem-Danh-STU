@startuml
title 2. Luồng Điều Hướng và Truy Cập Trang Quản Lý Admin

actor "Admin User" as admin
participant "Sidebar.jsx" as sidebar
participant "DashboardLayout.jsx" as layout
participant "DanhSachTaiKhoanQuanTriPage.jsx" as page
participant "DanhSachTaiKhoanAdminComponents.jsx" as component
participant "AuthContext.jsx" as authContext
participant "JwtAuthenticationFilter.java" as authFilter

== Kiểm Tra Trạng Thái Đăng Nhập ==
admin -> sidebar: Truy cập dashboard
sidebar -> authContext: Lấy thông tin từ localStorage
authContext --> sidebar: {user, userRole, accessToken}

== Hiển Thị Menu Dựa Trên Vai Trò ==
sidebar -> sidebar: Kiểm tra userRole === 'admin'
sidebar -> sidebar: Hiển thị menu "Quản Lý Tài Khoản"
sidebar -> sidebar: useLocation() để xác định active menu

== Điều Hướng Đến Trang Quản Lý ==
admin -> sidebar: Click "Quản lý tài khoản quản trị viên"
sidebar -> page: Navigate to /admin/account-account
page -> layout: Sử dụng DashboardLayout
layout -> layout: Render sidebar + main content
layout -> component: Load DanhSachTaiKhoanAdminComponents

== Kiểm Tra Quyền Truy Cập ==
component -> authFilter: Mọi API request đều qua filter
authFilter -> authFilter: Kiểm tra JWT token trong header:\nAuthorization: Bearer <token>
authFilter -> authFilter: Validate token với JwtTokenProvider
authFilter -> authFilter: Kiểm tra role = ROLE_ADMIN

alt Token hợp lệ và có quyền ADMIN
    authFilter -> authFilter: Set SecurityContext
    authFilter --> component: Cho phép truy cập API
else Token không hợp lệ hoặc hết hạn
    authFilter --> component: HTTP 401 Unauthorized
    component --> admin: Chuyển hướng về trang login
else Không có quyền ADMIN
    authFilter --> component: HTTP 403 Forbidden
    component --> admin: Hiển thị lỗi "Không có quyền truy cập"
end

component --> admin: Hiển thị trang quản lý admin

@enduml