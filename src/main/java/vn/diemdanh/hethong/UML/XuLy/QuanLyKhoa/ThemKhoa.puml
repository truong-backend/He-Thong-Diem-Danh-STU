@startuml
'!theme cerulean
title Sơ đồ thêm môn học mới

actor "Admin" as admin
'participant "Header Component" as header
participant "MonHocModal" as modal
participant "MonHocForm" as form
participant "DanhSachMonHocComponents.jsx" as component
participant "monHocService.js" as service
participant "MonHocController.java" as controller
participant "MonHocService.java" as backendService
participant "MonHocRepository" as repository
database "Database" as db

admin -> component: Click "Thêm Môn học Mới"
header -> component: Trigger open modal
component -> modal: Show modal
modal -> form: Display empty form

'note right of form
'  Form fields:
'  - maMh: Mã môn học (required, max 20 chars)
'  - tenMh: Tên môn học (required, max 50 chars)
'  - soTiet: Số tiết (required, > 0)
'end note

admin -> form: Nhập thông tin môn học
admin -> form: Click Submit
form -> form: validateFields()

alt Validation thành công
    form -> component: handleModalOk(values)
    activate component

    component -> service: createMonHoc(values)
    activate service

    service -> controller: POST /api/monhoc
'    note right: Body: {maMh, tenMh, soTiet}
    activate controller

    controller -> backendService: createMonHoc(monHocData)
    activate backendService

    backendService -> backendService: Kiểm tra maMh trùng lặp

    alt Mã môn học chưa tồn tại
        backendService -> repository: save(monHocEntity)
        activate repository

        repository -> db: INSERT INTO monhoc
        db --> repository: Saved entity
        deactivate repository

        repository --> backendService: MonHoc entity
        backendService -> backendService: Convert to DTO
        backendService --> controller: MonHocDTO
        deactivate backendService

        controller --> service: 201 Created + DTO
        deactivate controller

        service --> component: Success response
        deactivate service

        component -> component: message.success()
        component -> component: fetchMonHocs() - Refresh list
        component -> modal: Close modal
        component --> admin: Thông báo thành công

    else Mã môn học đã tồn tại
        backendService --> controller: 400 Bad Request
        deactivate backendService
        controller --> service: Error response
        deactivate controller
        service --> component: Error
        deactivate service
        component -> component: message.error()
        component --> admin: Thông báo lỗi
    end

    deactivate component

else Validation thất bại
    form --> admin: Hiển thị lỗi validation
end

@enduml