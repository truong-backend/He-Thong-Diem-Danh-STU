@startuml
!theme plain
title Thêm môn học mới

actor "Admin" as admin

participant "DanhSachMonHocComponents" as component
participant "MonHocModal & Form" as modal
participant "monHocService.js" as frontendService
participant "MonHocController.java" as controller
participant "MonHocService.java" as backendService
participant "MonHocRepository" as repository
database "Database" as db

admin -> component: Click "Thêm môn học"
component -> modal: Hiển thị modal
modal -> admin: Hiển thị form

admin -> modal: Nhập thông tin và submit
modal -> modal: validateFields()

alt Validation thành công
    modal -> component: handleModalOk(values)
    component -> frontendService: createMonHoc(values)
    frontendService -> controller: POST /api/monhoc
    controller -> backendService: createMonHoc(data)
    backendService -> backendService: Kiểm tra mã môn trùng

    alt Mã môn học chưa tồn tại
        backendService -> repository: save(monHocEntity)
        repository -> db: Truy vấn
        db --> repository: Thực thi thành công
        repository --> backendService: MonHoc entity
        backendService -> backendService: Chuyển đổi thành DTO
        backendService --> controller: MonHocDTO
        controller --> frontendService: 201 Created + DTO
        frontendService --> component: Thành công
        component -> component: message.success()
        component -> component: fetchMonHocs() - Cập nhật danh sách
        component -> modal: Đóng modal
        component -> admin: Hiển thị thông báo thành công

    else Mã môn học đã tồn tại
        backendService --> controller: 400 Bad Request
        controller --> frontendService: Lỗi
        frontendService --> component: message.error()
        component -> admin: Hiển thị thông báo lỗi
    end

else Validation thất bại
    modal -> admin: Hiển thị lỗi validation
end

@enduml
