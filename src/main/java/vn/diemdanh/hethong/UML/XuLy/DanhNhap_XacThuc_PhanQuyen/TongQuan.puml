@startuml
!theme plain
title Tổng quan Hệ thống Đăng nhập - Multi-Role Authentication System

actor "Sinh viên\n(Student)" as STUDENT
actor "Giảng viên\n(Teacher)" as TEACHER
actor "Quản trị viên\n(Admin)" as ADMIN

box "Frontend Layer" #LightBlue
    participant "LoginForm.jsx" as LF
    participant "AuthContext.jsx" as AC
    participant "api.js" as API
end box

box "Backend Layer" #LightGreen
    participant "AuthController" as AUTH
    participant "UserService" as US
    participant "AdminService" as AS
    participant "JwtTokenProvider" as JWT
end box

box "Data Layer" #LightYellow
    database "UserRepository" as UR
end box

== Phase 1: Frontend Validation & Request ==

group Frontend Input Validation
    alt Student Login
        STUDENT -> LF: Nhập email (@student.stu.edu.vn) & password
        LF -> LF: Validate với react-hook-form & yup
        LF -> AC: login(email, password, "STUDENT")
        AC -> API: authAPI.loginStudent()
    else Teacher Login
        TEACHER -> LF: Nhập email & password
        LF -> LF: Validate với react-hook-form & yup
        LF -> AC: login(email, password, "TEACHER")
        AC -> API: authAPI.loginTeacher()
    else Admin Login
        ADMIN -> LF: Nhập email & password
        LF -> LF: Validate với react-hook-form & yup
        LF -> AC: login(email, password, "ADMIN")
        AC -> API: authAPI.loginAdmin()
    end
end

== Phase 2: Backend Authentication Process ==

group Backend Authentication
    alt Student Authentication
        API -> AUTH: POST /api/sinhvien/login
        AUTH -> AUTH: Kiểm tra email có đuôi @student.stu.edu.vn
        AUTH -> US: AuthenticationManager.authenticate()
        US -> UR: loadUserByUsername(email)
        UR -> US: CustomUserDetails (ROLE_STUDENT)
        US -> AUTH: Authentication success
        AUTH -> JWT: generateToken(userDetails)
        note right: JWT chứa:\n- userId, email, role\n- userType="USER"
        JWT -> AUTH: JWT token
        AUTH -> API: UserLoginResponse {accessToken, id, username, email, role="STUDENT"}

    else Teacher Authentication
        API -> AUTH: POST /api/giangvien/login
        AUTH -> US: AuthenticationManager.authenticate()
        US -> UR: loadUserByUsername(email)
        UR -> US: CustomUserDetails (ROLE_TEACHER)
        US -> AUTH: Authentication success
        AUTH -> JWT: generateToken(userDetails)
        note right: JWT chứa:\n- userId, email, role\n- userType="USER"
        JWT -> AUTH: JWT token
        AUTH -> API: UserLoginResponse {accessToken, id, username, email, role="TEACHER"}

    else Admin Authentication
        API -> AUTH: POST /api/admin/login
        AUTH -> AS: AuthenticationManager.authenticate()
        AS -> UR: loadUserByUsername(email)
        UR -> AS: CustomAdminDetails (ROLE_ADMIN)
        AS -> AUTH: Authentication success
        AUTH -> JWT: generateToken(userDetails)
        note right: JWT chứa:\n- userId, email, role\n- userType="ADMIN"
        JWT -> AUTH: JWT token
        AUTH -> API: UserLoginResponse {accessToken, id, username, email, role="ADMIN"}
    end
end

== Phase 3: Response Handling & Redirection ==

group Success Response Handling
    API -> AC: Successful login response
    AC -> AC: Lưu vào localStorage:\n- accessToken\n- user info\n- userRole
    AC -> AC: Cập nhật AuthContext state:\n- isAuthenticated = true

    alt Student Success
        AC -> STUDENT: Chuyển hướng đến /student/dashboard
    else Teacher Success
        AC -> TEACHER: Chuyển hướng đến /teacher/dashboard
    else Admin Success
        AC -> ADMIN: Chuyển hướng đến /admin/dashboard
    end
end

== Phase 4: Error Handling ==

group Error Scenarios
    alt Authentication Errors
        AUTH -> API: 400 "Email hoặc mật khẩu không chính xác"
        note right: BadCredentialsException
    else System Errors
        AUTH -> API: 500 "Lỗi hệ thống"
        note right: DataAccessException,\nJwtException
    else Account Status Errors
        AUTH -> API: 403 "Tài khoản đã bị khóa"
        note right: AccountStatusException
    else Validation Errors
        AUTH -> API: 400 "Email không hợp lệ"
        note right: Student email validation
    end

    API -> AC: Error response
    AC -> LF: Truyền thông báo lỗi
    LF -> STUDENT: Hiển thị thông báo lỗi
    LF -> TEACHER: Hiển thị thông báo lỗi
    LF -> ADMIN: Hiển thị thông báo lỗi
end

note across
**Các điểm chính của hệ thống:**
1. **Multi-Role Support**: Hỗ trợ 3 loại người dùng với các endpoint riêng biệt
2. **Email Validation**: Sinh viên phải sử dụng email có đuôi @student.stu.edu.vn
3. **JWT Authentication**: Sử dụng JWT token cho xác thực và phân quyền
4. **Role-based Redirection**: Chuyển hướng tự động dựa trên vai trò người dùng
5. **Comprehensive Error Handling**: Xử lý đầy đủ các loại lỗi có thể xảy ra
6. **State Management**: Sử dụng React Context để quản lý trạng thái đăng nhập
end note

@enduml