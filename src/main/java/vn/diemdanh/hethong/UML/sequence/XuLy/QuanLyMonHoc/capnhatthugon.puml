@startuml
!theme plain
title Cập nhật môn học

actor "Admin" as admin

participant "DanhSachMonHocComponents" as component
participant "MonHocModal & Form" as modal
participant "monHocService.js" as service
participant "MonHocController.java" as controller
participant "MonHocService.java" as backendService
participant "MonHocRepository" as repository
database "Database" as db

admin -> component: Click "Sửa" button
component -> modal: Hiển thị modal
modal -> admin: Hiển thị form

admin -> modal: Chỉnh sửa và submit
modal -> modal: validateFields()

alt Validation thành công
    modal -> component: handleModalOk(values)
    component -> service: updateMonHoc(maMh, values)
    service -> controller: PUT /api/monhoc/{maMh}
    controller -> backendService: updateMonHoc(maMh, data)
    backendService -> repository: findById(maMh)
    repository -> db: Truy vấn

    alt Môn học tồn tại
        db --> repository: MonHoc entity
        repository --> backendService: MonHoc entity

        backendService -> backendService: Cập nhật các trường (tenMh, soTiet)
        backendService -> repository: save(updatedEntity)
        repository -> db: UPDATE monhoc
        db --> repository: Updated entity
        repository --> backendService: Updated entity

        backendService -> backendService: Chuyển thành DTO
        backendService --> controller: MonHocDTO
        controller --> service: 200 OK + DTO
        service --> component: Thành công

        component -> component: message.success()
        component -> component: fetchMonHocs()
        component -> modal: Đóng modal
        component -> admin: Thông báo thành công

    else Môn học không tồn tại
        db --> repository: null
        repository --> backendService: null
        backendService --> controller: 404 Not Found
        controller --> service: Lỗi
        service --> component: message.error()
        component -> admin: Thông báo lỗi
    end

else Validation thất bại
    modal -> admin: Hiển thị lỗi validation
end
@enduml
