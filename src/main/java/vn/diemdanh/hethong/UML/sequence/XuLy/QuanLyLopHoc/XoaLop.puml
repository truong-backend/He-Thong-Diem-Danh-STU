@startuml
!theme plain
title Luồng xóa lớp học

participant "Table Actions" as table
participant "Popconfirm" as popup
participant "DanhSachLopComponents.jsx" as component
participant "lopService.js" as lopService
participant "LopController" as controller
participant "LopService" as service
participant "LopRepository" as repository
database "Database" as db

== Bắt đầu xóa ==
table -> popup: Người dùng nhấn nút "Xóa" (DeleteOutlined)
popup -> popup: Hiển thị Popconfirm
note over popup
"Bạn có chắc chắn muốn xóa lớp này?"
- Nút "Có"
- Nút "Không"
end note

== Xác nhận xóa ==
popup -> component: Người dùng nhấn "Có"
component -> component: handleDelete(maLop)
component -> lopService: deleteLop(maLop)
lopService -> controller: DELETE /api/lop/{maLop}

== Xử lý Backend ==
controller -> service: deleteLop(maLop)
service -> repository: findById(maLop)
repository -> db: SELECT * FROM lop WHERE maLop = ?

alt Lớp không tồn tại
    db --> repository: Empty result
    repository --> service: Optional.empty()
    service -> service: Ném RuntimeException("Lớp không tồn tại")
    service --> controller: Exception
    controller --> lopService: 404 Not Found
    lopService --> component: Error response
    component -> component: message.error("Lớp không tồn tại")

else Lớp tồn tại
    db --> repository: Lop entity
    repository --> service: Lop entity

    == Kiểm tra ràng buộc (nếu có) ==
    note over service
    Có thể kiểm tra các ràng buộc:
    - Lớp có sinh viên hay không?
    - Lớp có dữ liệu liên quan khác?
    end note

    alt Có ràng buộc dữ liệu
        service -> service: Ném RuntimeException("Không thể xóa lớp có dữ liệu liên quan")
        service --> controller: Exception
        controller --> lopService: 400 Bad Request
        lopService --> component: Error response
        component -> component: message.error("Không thể xóa lớp có dữ liệu liên quan")

    else Không có ràng buộc
        service -> repository: delete(lopEntity)
        repository -> db: DELETE FROM lop WHERE maLop = ?
        db --> repository: Success
        repository --> service: Void
        service --> controller: Success (204 No Content)
        controller --> lopService: 204 No Content
        lopService --> component: Success response

        == Xử lý thành công ==
        component -> component: message.success("Xóa lớp thành công")
        component -> component: fetchData() - Làm mới danh sách
    end
end

== Hủy xóa ==
popup -> popup: Người dùng nhấn "Không" hoặc click outside
popup -> popup: Đóng Popconfirm, không thực hiện gì

@enduml