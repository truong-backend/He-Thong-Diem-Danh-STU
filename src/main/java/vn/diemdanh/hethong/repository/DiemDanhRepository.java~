package vn.diemdanh.hethong.repository;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import vn.diemdanh.hethong.entity.DiemDanh;
import vn.diemdanh.hethong.entity.Tkb;

import java.time.LocalDate;

public interface DiemDanhRepository extends JpaRepository<DiemDanh, Long> {

    Page<DiemDanh> findByMaTkb(Tkb tkb, Pageable pageable);
    Page<DiemDanh> findByMaSv(String maSv, Pageable pageable);
    Page<DiemDanh> findByMaTkbAndMaSv(Tkb tkb, String maSv, Pageable pageable);
    Page<DiemDanh> findByNgayHoc(LocalDate ngayHoc, Pageable pageable);
    Page<DiemDanh> findByNgayHocBetween(LocalDate startDate, LocalDate endDate, Pageable pageable);
    Page<DiemDanh> findByMaSvAndNgayHocBetween(String maSv, LocalDate startDate, LocalDate endDate, Pageable pageable);

    // 6. ĐIỂM DANH THỦ CÔNG - INSERT/UPDATE
    @Modifying
    @Transactional
    @Query(value = """
        INSERT INTO diem_danh (ma_tkb, ma_sv, ngay_hoc, diem_danh1, ghi_chu)
        VALUES (:maTkb, :maSv, :ngayHoc, NOW(), :ghiChu)
        ON DUPLICATE KEY UPDATE 
            diem_danh2 = CASE 
                WHEN diem_danh1 IS NOT NULL AND diem_danh2 IS NULL THEN NOW()
                ELSE diem_danh2
            END,
            ghi_chu = VALUES(ghi_chu)
        """, nativeQuery = true)
    void markAttendanceManual(@Param("maTkb") Integer maTkb,
                              @Param("maSv") String maSv,
                              @Param("ngayHoc") LocalDate ngayHoc,
                              @Param("ghiChu") String ghiChu);
} 